if
(
text
.
Equals
(
)
)
return
2
;
if
(
angleBrackets
>
0
)
{
if
(
!
text
.
Equals
(
)
&&
!
text
.
Equals
(
)
)
generics
.
Add
(
text
)
;
}
else
if
(
squareBrackets
>
0
||
text
.
Equals
(
)
||
(
returnTypes
.
Count
>
0
&&
returnTypes
[
returnTypes
.
Count
-
1
]
.
Equals
(
)
)
)
{
if
(
text
.
Equals
(
)
||
(
squareBrackets
==
0
&&
returnTypes
.
Count
==
1
&&
name
.
Length
>
0
)
)
{
foreach
(
string
entry
in
returnTypes
)
modifiers
.
Add
(
entry
)
;
returnTypes
.
Clear
(
)
;
returnTypes
.
Add
(
name
)
;
name
=
;
}
returnTypes
.
Add
(
text
)
;
}
else
if
(
(
!
Char
.
IsSymbol
(
text
[
0
]
)
&&
!
Char
.
IsPunctuation
(
text
[
0
]
)
)
||
text
[
0
]
.
Equals
(
)
)
{
if
(
name
.
Length
==
0
)
name
=
text
;
else
if
(
returnTypes
.
Count
==
1
)
{
foreach
(
string
entry
in
returnTypes
)
modifiers
.
Add
(
entry
)
;
returnTypes
.
Clear
(
)
;
returnTypes
.
Add
(
name
)
;
name
=
text
;
}
}
else
if
(
text
.
Equals
(
)
)
return
3
;
else
return
-
1
;
return
2
;
}

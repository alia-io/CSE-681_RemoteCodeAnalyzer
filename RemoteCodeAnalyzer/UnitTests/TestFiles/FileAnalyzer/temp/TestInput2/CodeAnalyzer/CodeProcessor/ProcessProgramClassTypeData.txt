string
entry
;
int
index
;
for
(
index
=
i
;
index
<
programFile
.
FileTextData
.
Count
;
index
++
)
{
entry
=
programFile
.
FileTextData
[
index
]
;
if
(
this
.
IgnoreEntry
(
entry
)
)
continue
;
this
.
UpdateTextData
(
entry
)
;
if
(
entry
.
Equals
(
)
)
{
if
(
this
.
EndBracketedScope
(
scopeType
)
)
return
index
;
continue
;
}
if
(
entry
.
Equals
(
)
||
entry
.
Equals
(
)
)
{
index
=
this
.
NewProgramClassType
(
entry
,
index
)
;
continue
;
}
if
(
entry
.
Equals
(
)
)
{
if
(
this
.
CheckIfFunction
(
)
)
{
scopeStack
.
Push
(
entry
)
;
index
=
this
.
ProcessFunctionData
(
++
index
)
;
continue
;
}
else
scopeStack
.
Push
(
entry
)
;
}
if
(
entry
.
Equals
(
)
)
{
if
(
this
.
CheckIfFunction
(
)
)
{
index
=
this
.
ProcessFunctionData
(
++
index
)
;
continue
;
}
}
this
.
UpdateStringBuilder
(
entry
)
;
}
return
index
;
}

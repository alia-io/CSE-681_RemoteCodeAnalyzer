 
 
string
entry
;
 
 
string
name
=
;
 
 
List
<
string
>
textData
=
new
List
<
string
>
(
)
;
 
 
string
[
]
modifiersArray
=
stringBuilder
.
ToString
(
)
.
Split
(
)
;
 
 
List
<
string
>
modifiers
=
new
List
<
string
>
(
)
;
 
 
List
<
string
>
generics
=
new
List
<
string
>
(
)
;
 
 
int
brackets
=
0
;
 
 
 
 
foreach
(
string
modifier
in
modifiersArray
)
 
 
if
(
modifier
.
Length
>
0
)
modifiers
.
Add
(
modifier
)
;
 
 
 
 
scopeStack
.
Push
(
type
)
;
 
 
this
.
ClearCurrentItems
(
)
;
 
 
 
 
while
(
++
index
<
programFile
.
FileTextData
.
Count
)
 
 
{
 
 
entry
=
programFile
.
FileTextData
[
index
]
;
 
 
 
 
 
 
if
(
this
.
IgnoreEntry
(
entry
)
)
continue
;
 
 
 
 
textData
.
Add
(
entry
)
;
 
 
 
 
if
(
entry
.
Equals
(
)
)
 
 
{
 
 
scopeStack
.
Push
(
)
;
 
 
break
;
 
 
}
 
 
 
 
if
(
entry
.
Equals
(
)
)
brackets
++
;
 
 
else
if
(
entry
.
Equals
(
)
)
brackets
--
;
 
 
else
if
(
brackets
>
0
)
generics
.
Add
(
entry
)
;
 
 
 
 
if
(
name
.
Length
==
0
)
 
 
if
(
!
entry
.
Equals
(
)
)
name
=
entry
;
 
 
}
 
 
 
 
return
(
++
index
,
name
,
textData
,
modifiers
,
generics
)
;
 
 
}

 
 
bool
isFunction
=
false
;
 
 
if
(
!
activeRules
.
OfType
<
ForRule_CS
>
(
)
.
Any
(
)
)
 
 
{
 
 
while
(
scopeStack
.
Count
>
0
&&
scopeStack
.
Peek
(
)
.
Equals
(
)
||
scopeStack
.
Peek
(
)
.
Equals
(
)
||
scopeStack
.
Peek
(
)
.
Equals
(
)
 
 
||
scopeStack
.
Peek
(
)
.
Equals
(
)
||
scopeStack
.
Peek
(
)
.
Equals
(
)
||
scopeStack
.
Peek
(
)
.
Equals
(
)
 
 
||
scopeStack
.
Peek
(
)
.
Equals
(
)
||
scopeStack
.
Peek
(
)
.
Equals
(
)
||
scopeStack
.
Peek
(
)
.
Equals
(
)
)
 
 
{
 
 
if
(
scopeStack
.
Peek
(
)
.
Equals
(
)
)
 
 
{
 
 
if
(
typeStack
.
Count
>
0
&&
typeStack
.
Peek
(
)
.
GetType
(
)
==
typeof
(
ProgramFunction
)
)
 
 
{
 
 
if
(
(
(
ProgramFunction
)
typeStack
.
Peek
(
)
)
.
Size
==
0
)
 
 
(
(
ProgramFunction
)
typeStack
.
Peek
(
)
)
.
Size
++
;
 
 
typeStack
.
Pop
(
)
;
 
 
}
 
 
isFunction
=
true
;
 
 
}
 
 
scopeStack
.
Pop
(
)
;
 
 
}
 
 
this
.
ClearCurrentItems
(
)
;
 
 
}
 
 
return
isFunction
;
 
 
}

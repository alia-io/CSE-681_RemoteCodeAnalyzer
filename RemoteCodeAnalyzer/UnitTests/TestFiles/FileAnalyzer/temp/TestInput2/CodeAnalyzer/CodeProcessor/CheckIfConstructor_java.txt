int
functionRequirement
=
0
;
List
<
string
>
modifiers
=
new
List
<
string
>
(
)
;
string
name
=
;
List
<
string
>
parameters
=
new
List
<
string
>
(
)
;
int
parentheses
=
0
;
int
squareBrackets
=
0
;
int
angleBrackets
=
0
;
int
periods
=
0
;
for
(
int
i
=
0
;
i
<
functionIdentifier
.
Length
;
i
++
)
{
string
text
=
functionIdentifier
[
i
]
;
if
(
text
.
Length
<
1
)
continue
;
if
(
text
.
Equals
(
)
)
parentheses
++
;
else
if
(
text
.
Equals
(
)
)
squareBrackets
++
;
else
if
(
text
.
Equals
(
)
)
angleBrackets
++
;
else
if
(
text
.
Equals
(
)
)
periods
++
;
functionRequirement
=
this
.
TestConstructorRequirement_java
(
functionRequirement
,
text
,
ref
name
,
ref
modifiers
,
ref
parameters
,
squareBrackets
,
angleBrackets
,
parentheses
,
periods
)
;
if
(
periods
>
0
&&
!
text
.
Equals
(
)
)
periods
--
;
else
if
(
text
.
Equals
(
)
)
parentheses
--
;
else
if
(
text
.
Equals
(
)
)
squareBrackets
--
;
else
if
(
text
.
Equals
(
)
)
angleBrackets
--
;
}
if
(
functionRequirement
==
4
||
functionRequirement
==
7
)
{
this
.
NewFunction
(
functionIdentifier
,
name
,
modifiers
,
new
List
<
string
>
(
)
,
new
List
<
string
>
(
)
,
parameters
,
new
List
<
string
>
(
)
)
;
return
true
;
}
return
false
;
}

 
 
IEnumerator
enumerator
;
string
[
]
programLines
=
programFile
.
FileText
.
Split
(
new
String
[
]
{
Environment
.
NewLine
}
,
StringSplitOptions
.
None
)
;
for
(
int
i
=
0
;
i
<
programLines
.
Length
;
i
++
)
 
 
{
 
 
enumerator
=
programLines
[
i
]
.
GetEnumerator
(
)
;
 
 
 
 
while
(
enumerator
.
MoveNext
(
)
)
 
 
{
 
 
if
(
Char
.
IsWhiteSpace
(
(
char
)
enumerator
.
Current
)
)
 
 
{
 
 
this
.
AddEntryToFileTextData
(
)
;
 
 
continue
;
 
 
}
 
 
 
 
 
 
if
(
(
Char
.
IsPunctuation
(
(
char
)
enumerator
.
Current
)
||
Char
.
IsSymbol
(
(
char
)
enumerator
.
Current
)
)
 
 
&&
!
(
(
char
)
enumerator
.
Current
)
.
Equals
(
)
)
 
 
{
 
 
 
 
if
(
stringBuilder
.
Length
==
1
&&
(
Char
.
IsPunctuation
(
(
char
)
stringBuilder
.
ToString
(
)
[
0
]
)
||
Char
.
IsSymbol
(
(
char
)
stringBuilder
.
ToString
(
)
[
0
]
)
)
 
 
&&
this
.
DetectDoubleCharacter
(
(
char
)
stringBuilder
.
ToString
(
)
[
0
]
,
(
char
)
enumerator
.
Current
)
)
 
 
{
 
 
stringBuilder
.
Append
(
enumerator
.
Current
)
;
 
 
this
.
AddEntryToFileTextData
(
)
;
 
 
continue
;
 
 
}
 
 
this
.
AddEntryToFileTextData
(
)
;
 
 
}
 
 
else
if
(
stringBuilder
.
Length
==
1
&&
!
(
(
char
)
stringBuilder
.
ToString
(
)
[
0
]
)
.
Equals
(
)
 
 
&&
(
Char
.
IsPunctuation
(
(
char
)
stringBuilder
.
ToString
(
)
[
0
]
)
||
Char
.
IsSymbol
(
(
char
)
stringBuilder
.
ToString
(
)
[
0
]
)
)
)
 
 
this
.
AddEntryToFileTextData
(
)
;
 
 
 
 
stringBuilder
.
Append
(
enumerator
.
Current
)
;
 
 
}
 
 
 
 
this
.
AddEntryToFileTextData
(
)
;
 
 
programFile
.
FileTextData
.
Add
(
)
;
 
 
}
 
 
}
